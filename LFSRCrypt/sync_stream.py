import math

def bytes_to_bits(data: bytes) -> str:
    return ''.join(f"{byte:08b}" for byte in data)

def encrypt(plaintext: bytes, key: bytes) -> bytes:
    key: bytes = key * math.ceil(len(plaintext) // len(key))
    key: bytes = key[:len(plaintext)]
    cipher_bytes: bytearray = bytearray()
    for idx, byte in enumerate(plaintext):
        cipher_bytes.append(byte ^ key[idx])
    return bytes(cipher_bytes)


def decrypt(ciphertext: bytes, key: bytes) -> bytes:
    key: bytes = key * math.ceil(len(ciphertext) // len(key))
    key: bytes = key[:len(ciphertext)]
    plain_bytes: bytearray = bytearray()
    for idx, byte in enumerate(ciphertext):
        plain_bytes.append(byte ^ key[idx])
    return bytes(plain_bytes)



def main() -> None:
    key: bytes  = "–î–∞–Ω—è".encode()
    while True:
        print("\n=== LFSR Cipher ===")
        print("1. –ü–æ–∫–∞–∑–∞—Ç—å –∫–ª—é—á")
        print("2. –°–º–µ–Ω–∏—Ç—å –∫–ª—é—á")
        print("3. –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç")
        print("4. –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç (hex)")
        print("0. –í—ã—Ö–æ–¥")

        choice = input("> ").strip()

        if choice == "0":
            print("–í—ã—Ö–æ–¥.")
            break

        elif choice == "1":
            print(f"{key.decode()=}")

        elif choice == "2":
            try:
                key: bytes = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á: ").encode()
                
                print("‚úÖ –ö–ª—é—á –∏–∑–º–µ–Ω—ë–Ω.")
            except Exception as e:
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–≤–æ–¥–µ –∫–ª—é—á–∞:", e)

        elif choice == "3":
            text = input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è: ")
            if not text:
                print("–ü—É—Å—Ç–æ–π –≤–≤–æ–¥.")
                continue

            ciphertext = encrypt(text.encode(), key)

            print("–®–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç:", ciphertext.decode())
            print("üîí –®–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç (hex):", ciphertext.hex())
            print("üîí –®–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç (bin):", bytes_to_bits(ciphertext))

        elif choice == "4":
            hex_str = input("–í–≤–µ–¥–∏—Ç–µ —à–∏—Ñ—Ä–æ—Ç–µ–∫—Å—Ç –≤ hex: ").strip()
            try:
                ciphertext = bytes.fromhex(hex_str)
            except ValueError:
                print("–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π hex.")
                continue

            text = decrypt(ciphertext, key)
            print("üìú –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞:", text.decode())

        else:
            print("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")


if __name__ == "__main__":
    main()